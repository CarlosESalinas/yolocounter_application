[tool:pytest]
# Configuración de pytest
minversion = 6.0
addopts = 
    -v
    --tb=short
    --strict-markers
    --strict-config
    --color=yes
    --durations=10
    --cov=yolocounter
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-fail-under=80

testpaths = tests

# Markers personalizados
markers =
    slow: marca las pruebas que son lentas (desactivar con -m "not slow")
    integration: marca las pruebas de integración
    unit: marca las pruebas unitarias
    api: marca las pruebas de API
    ui: marca las pruebas de interfaz de usuario
    performance: marca las pruebas de rendimiento

# Filtros de warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:flask
    ignore::RuntimeWarning

# Configuración de archivos
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Configuración de logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Timeout para pruebas (opcional)
timeout = 300

# Configuración de archivos de prueba
norecursedirs = .git .tox dist build *.egg htmlcov .pytest_cache node_modules

# Configuración de cobertura
[coverage:run]
source = yolocounter
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */migrations/*
    */venv/*
    */env/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.: